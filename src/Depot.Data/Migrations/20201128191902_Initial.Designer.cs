// <auto-generated />
using System;
using Depot.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Depot.Data.Migrations
{
    [DbContext(typeof(DepotContext))]
    [Migration("20201128191902_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Depot.Business.Models.Acao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("acoes");
                });

            modelBuilder.Entity("Depot.Business.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId")
                        .IsUnique();

                    b.ToTable("colaboradores");
                });

            modelBuilder.Entity("Depot.Business.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("Depot.Business.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("estoques");
                });

            modelBuilder.Entity("Depot.Business.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("fornecedores");
                });

            modelBuilder.Entity("Depot.Business.Models.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("grupos");
                });

            modelBuilder.Entity("Depot.Business.Models.HistoricoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcaoId")
                        .HasColumnType("int");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("Int");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("Int");

                    b.Property<int>("GrupoId")
                        .HasColumnType("Int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("AcaoId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("historicoprodutos");
                });

            modelBuilder.Entity("Depot.Business.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("perfis");
                });

            modelBuilder.Entity("Depot.Business.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("GrupoId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("Depot.Business.Models.Colaborador", b =>
                {
                    b.HasOne("Depot.Business.Models.Perfil", "Perfil")
                        .WithOne("Colaborador")
                        .HasForeignKey("Depot.Business.Models.Colaborador", "PerfilId")
                        .IsRequired();
                });

            modelBuilder.Entity("Depot.Business.Models.Estoque", b =>
                {
                    b.HasOne("Depot.Business.Models.Endereco", "Endereco")
                        .WithOne("Estoque")
                        .HasForeignKey("Depot.Business.Models.Estoque", "EnderecoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Depot.Business.Models.Fornecedor", b =>
                {
                    b.HasOne("Depot.Business.Models.Endereco", "Endereco")
                        .WithOne("Fornecedor")
                        .HasForeignKey("Depot.Business.Models.Fornecedor", "EnderecoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Depot.Business.Models.HistoricoProduto", b =>
                {
                    b.HasOne("Depot.Business.Models.Acao", "Acao")
                        .WithMany("HistoricoProdutos")
                        .HasForeignKey("AcaoId")
                        .IsRequired();

                    b.HasOne("Depot.Business.Models.Colaborador", "Colaborador")
                        .WithMany("HistoricoProdutos")
                        .HasForeignKey("ColaboradorId")
                        .IsRequired();

                    b.HasOne("Depot.Business.Models.Produto", "Produto")
                        .WithMany("HistoricoProduto")
                        .HasForeignKey("ProdutoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Depot.Business.Models.Produto", b =>
                {
                    b.HasOne("Depot.Business.Models.Estoque", "Estoque")
                        .WithMany("Produtos")
                        .HasForeignKey("EstoqueId")
                        .IsRequired();

                    b.HasOne("Depot.Business.Models.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("Depot.Business.Models.Grupo", "Grupo")
                        .WithMany("Produtos")
                        .HasForeignKey("GrupoId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

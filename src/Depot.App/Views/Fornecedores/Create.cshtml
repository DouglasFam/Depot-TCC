@using Depot.App.Extensions
@model Depot.App.ViewModels.FornecedorViewModel

@{
    ViewData["Title"] = "Novo Fornecedor";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data" asp-action="Create">
            <vc:summary></vc:summary>



            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CNPJ" class="control-label"></label>
                <input asp-for="CNPJ" id="produto-1-cnpj" class="form-control" />
                <span asp-validation-for="CNPJ" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Ativo" /> @Html.DisplayNameFor(model => model.Ativo)
                </label>
            </div>
            <partial name="_Endereco" />

            <div class="form-group row">
                <div class="col-md-4">
                    <input type="submit" value="Adicionar" class="btn btn-primary" />
                </div>
                <div class="col-md-4">
                    <a class="btn btn-info" asp-action="Index">Voltar</a>
                </div>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
    BuscaCep();



    document.getElementById('produto-1-cnpj').addEventListener('input', function (e) {
      var x = e.target.value.replace(/\D/g, '').match(/(\d{0,2})(\d{0,3})(\d{0,3})(\d{0,4})(\d{0,2})/);
      e.target.value = !x[2] ? x[1] : x[1] + '.' + x[2] + '.' + x[3] + '/' + x[4] + (x[5] ? '-' + x[5] : '');
    });
    </script>
}
